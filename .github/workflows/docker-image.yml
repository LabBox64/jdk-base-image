name: Build Docker Image

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Init env
      id: global_env
      run: |
        echo "::set-output name=REPOSITORY_NAME::${GITHUB_REPOSITORY#*/}"
        echo "::set-output name=DOCKERHUB_IMAGE_NAME::gb64/${GITHUB_REPOSITORY_OWNER,,}/${GITHUB_REPOSITORY#*/}"
        echo "::set-output name=COMMIT_HASH::${GITHUB_SHA::8}"
        echo "::set-output name=BRANCH::${GITHUB_REF#refs/heads/}"
        echo "::set-output name=REPOSITORY_NAME::${GITHUB_REPOSITORY#*/}"

    - name: Render DockerFile template
      run: |
        sh ./render.sh
      env:
        COMMIT_HASH: ${{ steps.global_env.outputs.COMMIT_HASH }}
        BRANCH: ${{ steps.global_env.outputs.BRANCH }}
        REPOSITORY_NAME: ${{ steps.global_env.outputs.REPOSITORY_NAME }}

    - name: Build the Docker image
      run: docker build -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:latest" -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:${GITHUB_SHA::8}" .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Init env
        id: global_env
        run: |
          echo "::set-output name=REPOSITORY_NAME_LC::${GITHUB_REPOSITORY_OWNER,,}"
          echo "::set-output name=REPOSITORY_NAME::${GITHUB_REPOSITORY#*/}"

      - name: Docker login
        run: docker login -u ${{secrets.DOCKER_HUB_USERNAME}} -p ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

      - name: Publish image
        run: docker push "gb64/${{ steps.global_env.outputs.REPOSITORY_NAME_LC }}/${{ steps.global_env.outputs.REPOSITORY_NAME }}"

